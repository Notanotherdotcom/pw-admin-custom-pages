<?php

/*
	* Admin Custom Pages Module v 1.0.0
	* Create custom admin pages without building a Process Module
	*
	* @author Diogo Oliveira
	*
	* ProcessWire 2.x
	* Copyright (C) 2011 by Ryan Cramer
	* Licensed under GNU/GPL v2, see LICENSE.TXT
	*
	* http://www.processwire.com
	*
*/

class ProcessAdminCustomPages extends Process {
	
	static public function getModuleInfo() {
		return array(
			'title'   => 'Admin Custom Pages',
			'summary' => 'Create custom admin pages without building a Process Module',
			'version' => 103,
			'author'  => 'Diogo Oliveira'
		);
	}

	public function init() {

		parent::init();

		// load script and style files for this page (expects a ACP_scripts_and_styles field with one url per line)
		if ($this->page->ACP_scripts_and_styles != "") {

			// get one url for each line of the field
			$files = explode("\n", $this->page->ACP_scripts_and_styles);

			foreach ($files as $f) {

				// get the file extension
				$extension = trim(substr(strrchr($f,'.'),1));
				
				// check if url is absolute, if not concatenate it with the site root url
				if (strpos($f, "http://") === false) {
					$f = $this->config->urls->root . $f;
				}

				// load the correct type of file
				switch ($extension) {

					case "js":
						$this->config->scripts->add($f);
						break;

					case "css":
						$this->config->styles->add($f);
						break;
				}
			}
		}
	}

	public function ___execute() {

		$template_file = $this->config->paths->templates . $this->page->template->name . ".php";

		if (file_exists($template_file)) {

			// only works with dev version of ProcessWire May 8 2013
			return $this->page->render($template_file);

		} elseif ($this->page->child->id) {

			// for the current stable version use this method
			return $this->page->child->render();

		} else {

			return $this->error("You should provide either a file named {$this->page->template->name}.php in your templates folder (for DEV version of PW), or a child of this page to render here"); 

		}

	}
    
} 
